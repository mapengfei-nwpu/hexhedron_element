# tetrahedron
# tetrahedron

P2 = VectorElement("Lagrange", tetrahedron, 2)
P1 = FiniteElement("Lagrange", tetrahedron, 1)
W = P2 * P1

(u, p) = TrialFunctions(W)
(v, q) = TestFunctions(W)

un = Coefficient(P2)
f = Coefficient(P2)
k = Constant(tetrahedron)

nu = 0.01

# Define variational problem
(u, p) = TrialFunctions(W)
(v, q) = TestFunctions(W)
F = inner((u-un)/k, v)*dx + inner(grad(un)*un, v)*dx + nu * \
    inner(grad(u), grad(v))*dx - div(v)*p * \
    dx + q*div(u)*dx - inner(f, v)*dx
a = lhs(F)
L = rhs(F)
